{"ts":1362682161232,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1362682163792,"patch":[[{"diffs":[[1,"function md5 (str) {\r\n  // http://kevin.vanzonneveld.net\r\n  // +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\r\n  // + namespaced by: Michael White (http://getsprink.com)\r\n  // +    tweaked by: Jack\r\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // +      input by: Brett Zamir (http://brett-zamir.me)\r\n  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // -    depends on: utf8_encode\r\n  // *     example 1: md5('Kevin van Zonneveld');\r\n  // *     returns 1: '6e658d4bfcb59cc13f96c14450ac40b9'\r\n  var xl;\r\n\r\n  var rotateLeft = function (lValue, iShiftBits) {\r\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\r\n  };\r\n\r\n  var addUnsigned = function (lX, lY) {\r\n    var lX4, lY4, lX8, lY8, lResult;\r\n    lX8 = (lX & 0x80000000);\r\n    lY8 = (lY & 0x80000000);\r\n    lX4 = (lX & 0x40000000);\r\n    lY4 = (lY & 0x40000000);\r\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\r\n    if (lX4 & lY4) {\r\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n    }\r\n    if (lX4 | lY4) {\r\n      if (lResult & 0x40000000) {\r\n        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n      } else {\r\n        return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n      }\r\n    } else {\r\n      return (lResult ^ lX8 ^ lY8);\r\n    }\r\n  };\r\n\r\n  var _F = function (x, y, z) {\r\n    return (x & y) | ((~x) & z);\r\n  };\r\n  var _G = function (x, y, z) {\r\n    return (x & z) | (y & (~z));\r\n  };\r\n  var _H = function (x, y, z) {\r\n    return (x ^ y ^ z);\r\n  };\r\n  var _I = function (x, y, z) {\r\n    return (y ^ (x | (~z)));\r\n  };\r\n\r\n  var _FF = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var _GG = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var _HH = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var _II = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var convertToWordArray = function (str) {\r\n    var lWordCount;\r\n    var lMessageLength = str.length;\r\n    var lNumberOfWords_temp1 = lMessageLength + 8;\r\n    var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\r\n    var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\r\n    var lWordArray = new Array(lNumberOfWords - 1);\r\n    var lBytePosition = 0;\r\n    var lByteCount = 0;\r\n    while (lByteCount < lMessageLength) {\r\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n      lBytePosition = (lByteCount % 4) * 8;\r\n      lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount) << lBytePosition));\r\n      lByteCount++;\r\n    }\r\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n    lBytePosition = (lByteCount % 4) * 8;\r\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\r\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\r\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\r\n    return lWordArray;\r\n  };\r\n\r\n  var wordToHex = function (lValue) {\r\n    var wordToHexValue = \"\",\r\n      wordToHexValue_temp = \"\",\r\n      lByte, lCount;\r\n    for (lCount = 0; lCount <= 3; lCount++) {\r\n      lByte = (lValue >>> (lCount * 8)) & 255;\r\n      wordToHexValue_temp = \"0\" + lByte.toString(16);\r\n      wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length - 2, 2);\r\n    }\r\n    return wordToHexValue;\r\n  };\r\n\r\n  var x = [],\r\n    k, AA, BB, CC, DD, a, b, c, d, S11 = 7,\r\n    S12 = 12,\r\n    S13 = 17,\r\n    S14 = 22,\r\n    S21 = 5,\r\n    S22 = 9,\r\n    S23 = 14,\r\n    S24 = 20,\r\n    S31 = 4,\r\n    S32 = 11,\r\n    S33 = 16,\r\n    S34 = 23,\r\n    S41 = 6,\r\n    S42 = 10,\r\n    S43 = 15,\r\n    S44 = 21;\r\n\r\n  str = this.utf8_encode(str);\r\n  x = convertToWordArray(str);\r\n  a = 0x67452301;\r\n  b = 0xEFCDAB89;\r\n  c = 0x98BADCFE;\r\n  d = 0x10325476;\r\n\r\n  xl = x.length;\r\n  for (k = 0; k < xl; k += 16) {\r\n    AA = a;\r\n    BB = b;\r\n    CC = c;\r\n    DD = d;\r\n    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\r\n    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\r\n    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\r\n    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\r\n    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\r\n    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\r\n    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\r\n    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\r\n    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\r\n    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\r\n    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\r\n    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\r\n    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\r\n    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\r\n    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\r\n    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\r\n    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\r\n    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\r\n    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\r\n    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\r\n    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\r\n    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453);\r\n    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\r\n    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\r\n    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\r\n    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\r\n    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\r\n    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\r\n    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\r\n    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\r\n    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\r\n    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\r\n    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\r\n    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\r\n    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\r\n    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\r\n    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\r\n    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\r\n    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\r\n    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\r\n    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\r\n    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\r\n    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\r\n    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\r\n    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\r\n    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\r\n    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\r\n    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\r\n    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244);\r\n    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\r\n    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\r\n    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\r\n    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\r\n    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\r\n    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\r\n    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\r\n    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\r\n    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\r\n    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314);\r\n    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\r\n    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\r\n    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\r\n    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\r\n    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\r\n    a = addUnsigned(a, AA);\r\n    b = addUnsigned(b, BB);\r\n    c = addUnsigned(c, CC);\r\n    d = addUnsigned(d, DD);\r\n  }\r\n\r\n  var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\r\n\r\n  return temp.toLowerCase();\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":7877}]],"length":7877,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362683155927,"patch":[[{"diffs":[[0," md5"],[-1," (str) {\r\n  // http://kevin.vanzonneveld.net\r\n  // +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\r\n  // + namespaced by: Michael White (http://getsprink.com)\r\n  // +    tweaked by: Jack\r\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // +      input by: Brett Zamir (http://brett-zamir.me)\r\n  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // -    depends on: utf8_encode\r\n  // *     example 1: md5('Kevin van Zonneveld');\r\n  // *     returns 1: '6e658d4bfcb59cc13f96c14450ac40b9'\r\n  var xl;\r\n\r\n  var rotateLeft = function (lValue, iShiftBits) {\r\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\r\n  };\r\n\r\n  var addUnsigned = function (lX, lY) {\r\n    var lX4, lY4, lX8, lY8, lResult;\r\n    lX8 = (lX & 0x80000000);\r\n    lY8 = (lY & 0x80000000);\r\n    lX4 = (lX & 0x40000000);\r\n    lY4 = (lY & 0x40000000);\r\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\r\n    if (lX4 & lY4) {\r\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n    }\r\n    if (lX4 | lY4) {\r\n      if (lResult & 0x40000000) {\r\n        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n      } else {\r\n        return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n      }\r\n    } else {\r\n      return (lResult ^ lX8 ^ lY8);\r\n    }\r\n  };\r\n\r\n  var _F = function (x, y, z) {\r\n    return (x & y) | ((~x) & z);\r\n  };\r\n  var _G = function (x, y, z) {\r\n    return (x & z) | (y & (~z));\r\n  };\r\n  var _H = function (x, y, z) {\r\n    return (x ^ y ^ z);\r\n  };\r\n  var _I = function (x, y, z) {\r\n    return (y ^ (x | (~z)));\r\n  };\r\n\r\n  var _FF = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var _GG = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var _HH = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var _II = function (a, b, c, d, x, s, ac) {\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n  };\r\n\r\n  var convertToWordArray = function (str) {\r\n    var lWordCount;\r\n    var lMessageLength = str.length;\r\n    var lNumberOfWords_temp1 = lMessageLength + 8;\r\n    var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\r\n    var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\r\n    var lWordArray = new Array(lNumberOfWords - 1);\r\n    var lBytePosition = 0;\r\n    var lByteCount = 0;\r\n    while (lByteCount < lMessageLength) {\r\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n      lBytePosition = (lByteCount % 4) * 8;\r\n      lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount) << lBytePosition));\r\n      lByteCount++;\r\n    }\r\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n    lBytePosition = (lByteCount % 4) * 8;\r\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\r\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\r\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\r\n    return lWordArray;\r\n  };\r\n\r\n  var wordToHex = function (lValue) {\r\n    var wordToHexValue = \"\",\r\n      wordToHexValue_temp = \"\",\r\n      lByte, lCount;\r\n    for (lCount = 0; lCount <= 3; lCount++) {\r\n      lByte = (lValue >>> (lCount * 8)) & 255;\r\n      wordToHexValue_temp = \"0\" + lByte.toString(16);\r\n      wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length - 2, 2);\r\n    }\r\n    return wordToHexValue;\r\n  };\r\n\r\n  var x = [],\r\n    k, AA, BB, CC, DD, a, b, c, d, S11 = 7,\r\n    S12 = 12,\r\n    S13 = 17,\r\n    S14 = 22,\r\n    S21 = 5,\r\n    S22 = 9,\r\n    S23 = 14,\r\n    S24 = 20,\r\n    S31 = 4,\r\n    S32 = 11,\r\n    S33 = 16,\r\n    S34 = 23,\r\n    S41 = 6,\r\n    S42 = 10,\r\n    S43 = 15,\r\n    S44 = 21;\r\n\r\n  str = this.utf8_encode(str);\r\n  x = convertToWordArray(str);\r\n  a = 0x67452301;\r\n  b = 0xEFCDAB89;\r\n  c = 0x98BADCFE;\r\n  d = 0x10325476;\r\n\r\n  xl = x.length;\r\n  for (k = 0; k < xl; k += 16) {\r\n    AA = a;\r\n    BB = b;\r\n    CC = c;\r\n    DD = d;\r\n    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\r\n    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\r\n    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\r\n    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\r\n    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\r\n    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\r\n    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\r\n    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\r\n    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\r\n    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\r\n    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\r\n    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\r\n    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\r\n    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\r\n    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\r\n    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\r\n    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\r\n    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\r\n    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\r\n    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\r\n    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\r\n    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453);\r\n    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\r\n    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\r\n    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\r\n    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\r\n    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\r\n    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\r\n    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\r\n    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\r\n    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\r\n    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\r\n    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\r\n    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\r\n    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\r\n    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\r\n    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\r\n    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\r\n    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\r\n    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\r\n    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\r\n    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\r\n    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\r\n    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\r\n    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\r\n    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\r\n    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\r\n    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\r\n    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244);\r\n    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\r\n    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\r\n    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\r\n    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\r\n    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\r\n    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\r\n    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\r\n    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\r\n    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\r\n    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314);\r\n    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\r\n    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\r\n    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\r\n    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\r\n    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\r\n    a = addUnsigned(a, AA);\r\n    b = addUnsigned(b, BB);\r\n    c = addUnsigned(c, CC);\r\n    d = addUnsigned(d, DD);\r\n  }\r\n\r\n  var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\r\n\r\n  return temp.toLowerCase();"],[1,"cycle(x, k) {\r\nvar a = x[0], b = x[1], c = x[2], d = x[3];\r\n\r\na = ff(a, b, c, d, k[0], 7, -680876936);\r\nd = ff(d, a, b, c, k[1], 12, -389564586);\r\nc = ff(c, d, a, b, k[2], 17,  606105819);\r\nb = ff(b, c, d, a, k[3], 22, -1044525330);\r\na = ff(a, b, c, d, k[4], 7, -176418897);\r\nd = ff(d, a, b, c, k[5], 12,  1200080426);\r\nc = ff(c, d, a, b, k[6], 17, -1473231341);\r\nb = ff(b, c, d, a, k[7], 22, -45705983);\r\na = ff(a, b, c, d, k[8], 7,  1770035416);\r\nd = ff(d, a, b, c, k[9], 12, -1958414417);\r\nc = ff(c, d, a, b, k[10], 17, -42063);\r\nb = ff(b, c, d, a, k[11], 22, -1990404162);\r\na = ff(a, b, c, d, k[12], 7,  1804603682);\r\nd = ff(d, a, b, c, k[13], 12, -40341101);\r\nc = ff(c, d, a, b, k[14], 17, -1502002290);\r\nb = ff(b, c, d, a, k[15], 22,  1236535329);\r\n\r\na = gg(a, b, c, d, k[1], 5, -165796510);\r\nd = gg(d, a, b, c, k[6], 9, -1069501632);\r\nc = gg(c, d, a, b, k[11], 14,  643717713);\r\nb = gg(b, c, d, a, k[0], 20, -373897302);\r\na = gg(a, b, c, d, k[5], 5, -701558691);\r\nd = gg(d, a, b, c, k[10], 9,  38016083);\r\nc = gg(c, d, a, b, k[15], 14, -660478335);\r\nb = gg(b, c, d, a, k[4], 20, -405537848);\r\na = gg(a, b, c, d, k[9], 5,  568446438);\r\nd = gg(d, a, b, c, k[14], 9, -1019803690);\r\nc = gg(c, d, a, b, k[3], 14, -187363961);\r\nb = gg(b, c, d, a, k[8], 20,  1163531501);\r\na = gg(a, b, c, d, k[13], 5, -1444681467);\r\nd = gg(d, a, b, c, k[2], 9, -51403784);\r\nc = gg(c, d, a, b, k[7], 14,  1735328473);\r\nb = gg(b, c, d, a, k[12], 20, -1926607734);\r\n\r\na = hh(a, b, c, d, k[5], 4, -378558);\r\nd = hh(d, a, b, c, k[8], 11, -2022574463);\r\nc = hh(c, d, a, b, k[11], 16,  1839030562);\r\nb = hh(b, c, d, a, k[14], 23, -35309556);\r\na = hh(a, b, c, d, k[1], 4, -1530992060);\r\nd = hh(d, a, b, c, k[4], 11,  1272893353);\r\nc = hh(c, d, a, b, k[7], 16, -155497632);\r\nb = hh(b, c, d, a, k[10], 23, -1094730640);\r\na = hh(a, b, c, d, k[13], 4,  681279174);\r\nd = hh(d, a, b, c, k[0], 11, -358537222);\r\nc = hh(c, d, a, b, k[3], 16, -722521979);\r\nb = hh(b, c, d, a, k[6], 23,  76029189);\r\na = hh(a, b, c, d, k[9], 4, -640364487);\r\nd = hh(d, a, b, c, k[12], 11, -421815835);\r\nc = hh(c, d, a, b, k[15], 16,  530742520);\r\nb = hh(b, c, d, a, k[2], 23, -995338651);\r\n\r\na = ii(a, b, c, d, k[0], 6, -198630844);\r\nd = ii(d, a, b, c, k[7], 10,  1126891415);\r\nc = ii(c, d, a, b, k[14], 15, -1416354905);\r\nb = ii(b, c, d, a, k[5], 21, -57434055);\r\na = ii(a, b, c, d, k[12], 6,  1700485571);\r\nd = ii(d, a, b, c, k[3], 10, -1894986606);\r\nc = ii(c, d, a, b, k[10], 15, -1051523);\r\nb = ii(b, c, d, a, k[1], 21, -2054922799);\r\na = ii(a, b, c, d, k[8], 6,  1873313359);\r\nd = ii(d, a, b, c, k[15], 10, -30611744);\r\nc = ii(c, d, a, b, k[6], 15, -1560198380);\r\nb = ii(b, c, d, a, k[13], 21,  1309151649);\r\na = ii(a, b, c, d, k[4], 6, -145523070);\r\nd = ii(d, a, b, c, k[11], 10, -1120210379);\r\nc = ii(c, d, a, b, k[2], 15,  718787259);\r\nb = ii(b, c, d, a, k[9], 21, -343485551);\r\n\r\nx[0] = add32(a, x[0]);\r\nx[1] = add32(b, x[1]);\r\nx[2] = add32(c, x[2]);\r\nx[3] = add32(d, x[3]);\r\n\r\n}\r\n\r\nfunction cmn(q, a, b, x, s, t) {\r\na = add32(add32(a, q), add32(x, t));\r\nreturn add32((a << s) | (a >>> (32 - s)), b);\r\n}\r\n\r\nfunction ff(a, b, c, d, x, s, t) {\r\nreturn cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n}\r\n\r\nfunction gg(a, b, c, d, x, s, t) {\r\nreturn cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n}\r\n\r\nfunction hh(a, b, c, d, x, s, t) {\r\nreturn cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\n\r\nfunction ii(a, b, c, d, x, s, t) {\r\nreturn cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n}\r\n\r\nfunction md51(s) {\r\ntxt = '';\r\nvar n = s.length,\r\nstate = [1732584193, -271733879, -1732584194, 271733878], i;\r\nfor (i=64; i<=s.length; i+=64) {\r\nmd5cycle(state, md5blk(s.substring(i-64, i)));\r\n}\r\ns = s.substring(i-64);\r\nvar tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];\r\nfor (i=0; i<s.length; i++)\r\ntail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);\r\ntail[i>>2] |= 0x80 << ((i%4) << 3);\r\nif (i > 55) {\r\nmd5cycle(state, tail);\r\nfor (i=0; i<16; i++) tail[i] = 0;\r\n}\r\ntail[14] = n*8;\r\nmd5cycle(state, tail);\r\nreturn state;\r\n}\r\n\r\n/* there needs to be support for Unicode here,\r\n * unless we pretend that we can redefine the MD-5\r\n * algorithm for multi-byte characters (perhaps\r\n * by adding every four 16-bit characters and\r\n * shortening the sum to 32 bits). Otherwise\r\n * I suggest performing MD-5 as if every character\r\n * was two bytes--e.g., 0040 0025 = @%--but then\r\n * how will an ordinary MD-5 sum be matched?\r\n * There is no way to standardize text to something\r\n * like UTF-8 before transformation; speed cost is\r\n * utterly prohibitive. The JavaScript standard\r\n * itself needs to look at this: it should start\r\n * providing access to strings as preformed UTF-8\r\n * 8-bit unsigned value arrays.\r\n */\r\nfunction md5blk(s) { /* I figured global was faster.   */\r\nvar md5blks = [], i; /* Andy King said do it this way. */\r\nfor (i=0; i<64; i+=4) {\r\nmd5blks[i>>2] = s.charCodeAt(i)\r\n+ (s.charCodeAt(i+1) << 8)\r\n+ (s.charCodeAt(i+2) << 16)\r\n+ (s.charCodeAt(i+3) << 24);\r\n}\r\nreturn md5blks;\r\n}\r\n\r\nvar hex_chr = '0123456789abcdef'.split('');\r\n\r\nfunction rhex(n)\r\n{\r\nvar s='', j=0;\r\nfor(; j<4; j++)\r\ns += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\r\n+ hex_chr[(n >> (j * 8)) & 0x0F];\r\nreturn s;\r\n}\r\n\r\nfunction hex(x) {\r\nfor (var i=0; i<x.length; i++)\r\nx[i] = rhex(x[i]);\r\nreturn x.join('');\r\n}\r\n\r\nfunction md5(s) {\r\nreturn hex(md51(s));\r\n}\r\n\r\n/* this function is much faster,\r\nso if possible we use it. Some IEs\r\nare the only ones I know of that\r\nneed the idiotic second function,\r\ngenerated by an if clause.  */\r\n\r\nfunction add32(a, b) {\r\nreturn (a + b) & 0xFFFFFFFF;\r\n}\r\n\r\nif (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\r\nfunction add32(x, y) {\r\nvar lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\nmsw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\nreturn (msw << 16) | (lsw & 0xFFFF);\r\n}"],[0,"\r\n}"]],"start1":8,"start2":8,"length1":7869,"length2":5685}]],"length":5693,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364417567887,"patch":[[{"diffs":[[1,"//taken from http://stackoverflow.com/questions/1655769/fastest-md5-implementation-in-javascript\r\n(function () {\r\n    md5 = function (string) {\r\n\r\n\t\tfunction cmn(q, a, b, x, s, t) {\r\n\t\t\ta = add32(add32(a, q), add32(x, t));\r\n\t\t\treturn add32((a << s) | (a >>> (32 - s)), b);\r\n\t\t}\r\n\r\n\r\n\t\tfunction ff(a, b, c, d, x, s, t) {\r\n\t\t\treturn cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n\t\t}\r\n\r\n\t\tfunction gg(a, b, c, d, x, s, t) {\r\n\t\t\treturn cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n\t\t}\r\n\r\n\t\tfunction hh(a, b, c, d, x, s, t) {\r\n\t\t\treturn cmn(b ^ c ^ d, a, b, x, s, t);\r\n\t\t}\r\n\r\n\t\tfunction ii(a, b, c, d, x, s, t) {\r\n\t\t\treturn cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n\t\t}\r\n\r\n\r\n\r\n\t\t"],[0,"function md5cycle(x,"]],"start1":0,"start2":0,"length1":20,"length2":684},{"diffs":[[0,"le(x, k) {\r\n"],[1,"\t\t\t"],[0,"var a = x[0]"]],"start1":679,"start2":679,"length1":24,"length2":27},{"diffs":[[0," = x[3];\r\n\r\n"],[1,"\t\t\t"],[0,"a = ff(a, b,"]],"start1":729,"start2":729,"length1":24,"length2":27},{"diffs":[[0,"80876936);\r\n"],[1,"\t\t\t"],[0,"d = ff(d, a,"]],"start1":774,"start2":774,"length1":24,"length2":27},{"diffs":[[0,"89564586);\r\n"],[1,"\t\t\t"],[0,"c = ff(c, d,"]],"start1":820,"start2":820,"length1":24,"length2":27},{"diffs":[[0,"06105819);\r\n"],[1,"\t\t\t"],[0,"b = ff(b, c,"]],"start1":866,"start2":866,"length1":24,"length2":27},{"diffs":[[0,"44525330);\r\n"],[1,"\t\t\t"],[0,"a = ff(a, b,"]],"start1":913,"start2":913,"length1":24,"length2":27},{"diffs":[[0,"76418897);\r\n"],[1,"\t\t\t"],[0,"d = ff(d, a,"]],"start1":958,"start2":958,"length1":24,"length2":27},{"diffs":[[0,"00080426);\r\n"],[1,"\t\t\t"],[0,"c = ff(c, d,"]],"start1":1005,"start2":1005,"length1":24,"length2":27},{"diffs":[[0,"73231341);\r\n"],[1,"\t\t\t"],[0,"b = ff(b, c,"]],"start1":1052,"start2":1052,"length1":24,"length2":27},{"diffs":[[0,"45705983);\r\n"],[1,"\t\t\t"],[0,"a = ff(a, b,"]],"start1":1097,"start2":1097,"length1":24,"length2":27},{"diffs":[[0,"70035416);\r\n"],[1,"\t\t\t"],[0,"d = ff(d, a,"]],"start1":1143,"start2":1143,"length1":24,"length2":27},{"diffs":[[0,"58414417);\r\n"],[1,"\t\t\t"],[0,"c = ff(c, d,"]],"start1":1190,"start2":1190,"length1":24,"length2":27},{"diffs":[[0,", -42063);\r\n"],[1,"\t\t\t"],[0,"b = ff(b, c,"]],"start1":1233,"start2":1233,"length1":24,"length2":27},{"diffs":[[0,"90404162);\r\n"],[1,"\t\t\t"],[0,"a = ff(a, b,"]],"start1":1281,"start2":1281,"length1":24,"length2":27},{"diffs":[[0,"04603682);\r\n"],[1,"\t\t\t"],[0,"d = ff(d, a,"]],"start1":1328,"start2":1328,"length1":24,"length2":27},{"diffs":[[0,"40341101);\r\n"],[1,"\t\t\t"],[0,"c = ff(c, d,"]],"start1":1374,"start2":1374,"length1":24,"length2":27},{"diffs":[[0,"02002290);\r\n"],[1,"\t\t\t"],[0,"b = ff(b, c,"]],"start1":1422,"start2":1422,"length1":24,"length2":27},{"diffs":[[0,"535329);\r\n\r\n"],[1,"\t\t\t"],[0,"a = gg(a, b,"]],"start1":1472,"start2":1472,"length1":24,"length2":27},{"diffs":[[0,"65796510);\r\n"],[1,"\t\t\t"],[0,"d = gg(d, a,"]],"start1":1517,"start2":1517,"length1":24,"length2":27},{"diffs":[[0,"69501632);\r\n"],[1,"\t\t\t"],[0,"c = gg(c, d,"]],"start1":1563,"start2":1563,"length1":24,"length2":27},{"diffs":[[0,"43717713);\r\n"],[1,"\t\t\t"],[0,"b = gg(b, c,"]],"start1":1610,"start2":1610,"length1":24,"length2":27},{"diffs":[[0,"73897302);\r\n"],[1,"\t\t\t"],[0,"a = gg(a, b,"]],"start1":1656,"start2":1656,"length1":24,"length2":27},{"diffs":[[0,"01558691);\r\n"],[1,"\t\t\t"],[0,"d = gg(d, a,"]],"start1":1701,"start2":1701,"length1":24,"length2":27},{"diffs":[[0,"38016083);\r\n"],[1,"\t\t\t"],[0,"c = gg(c, d,"]],"start1":1746,"start2":1746,"length1":24,"length2":27},{"diffs":[[0,"60478335);\r\n"],[1,"\t\t\t"],[0,"b = gg(b, c,"]],"start1":1793,"start2":1793,"length1":24,"length2":27},{"diffs":[[0,"05537848);\r\n"],[1,"\t\t\t"],[0,"a = gg(a, b,"]],"start1":1839,"start2":1839,"length1":24,"length2":27},{"diffs":[[0,"68446438);\r\n"],[1,"\t\t\t"],[0,"d = gg(d, a,"]],"start1":1884,"start2":1884,"length1":24,"length2":27},{"diffs":[[0,"19803690);\r\n"],[1,"\t\t\t"],[0,"c = gg(c, d,"]],"start1":1931,"start2":1931,"length1":24,"length2":27},{"diffs":[[0,"87363961);\r\n"],[1,"\t\t\t"],[0,"b = gg(b, c,"]],"start1":1977,"start2":1977,"length1":24,"length2":27},{"diffs":[[0,"63531501);\r\n"],[1,"\t\t\t"],[0,"a = gg(a, b,"]],"start1":2024,"start2":2024,"length1":24,"length2":27},{"diffs":[[0,"44681467);\r\n"],[1,"\t\t\t"],[0,"d = gg(d, a,"]],"start1":2071,"start2":2071,"length1":24,"length2":27},{"diffs":[[0,"51403784);\r\n"],[1,"\t\t\t"],[0,"c = gg(c, d,"]],"start1":2115,"start2":2115,"length1":24,"length2":27},{"diffs":[[0,"35328473);\r\n"],[1,"\t\t\t"],[0,"b = gg(b, c,"]],"start1":2162,"start2":2162,"length1":24,"length2":27},{"diffs":[[0,"607734);\r\n\r\n"],[1,"\t\t\t"],[0,"a = hh(a, b,"]],"start1":2212,"start2":2212,"length1":24,"length2":27},{"diffs":[[0," -378558);\r\n"],[1,"\t\t\t"],[0,"d = hh(d, a,"]],"start1":2254,"start2":2254,"length1":24,"length2":27},{"diffs":[[0,"22574463);\r\n"],[1,"\t\t\t"],[0,"c = hh(c, d,"]],"start1":2301,"start2":2301,"length1":24,"length2":27},{"diffs":[[0,"39030562);\r\n"],[1,"\t\t\t"],[0,"b = hh(b, c,"]],"start1":2349,"start2":2349,"length1":24,"length2":27},{"diffs":[[0,"35309556);\r\n"],[1,"\t\t\t"],[0,"a = hh(a, b,"]],"start1":2395,"start2":2395,"length1":24,"length2":27},{"diffs":[[0,"30992060);\r\n"],[1,"\t\t\t"],[0,"d = hh(d, a,"]],"start1":2441,"start2":2441,"length1":24,"length2":27},{"diffs":[[0,"72893353);\r\n"],[1,"\t\t\t"],[0,"c = hh(c, d,"]],"start1":2488,"start2":2488,"length1":24,"length2":27},{"diffs":[[0,"55497632);\r\n"],[1,"\t\t\t"],[0,"b = hh(b, c,"]],"start1":2534,"start2":2534,"length1":24,"length2":27},{"diffs":[[0,"94730640);\r\n"],[1,"\t\t\t"],[0,"a = hh(a, b,"]],"start1":2582,"start2":2582,"length1":24,"length2":27},{"diffs":[[0,"81279174);\r\n"],[1,"\t\t\t"],[0,"d = hh(d, a,"]],"start1":2628,"start2":2628,"length1":24,"length2":27},{"diffs":[[0,"58537222);\r\n"],[1,"\t\t\t"],[0,"c = hh(c, d,"]],"start1":2674,"start2":2674,"length1":24,"length2":27},{"diffs":[[0,"22521979);\r\n"],[1,"\t\t\t"],[0,"b = hh(b, c,"]],"start1":2720,"start2":2720,"length1":24,"length2":27},{"diffs":[[0,"76029189);\r\n"],[1,"\t\t\t"],[0,"a = hh(a, b,"]],"start1":2765,"start2":2765,"length1":24,"length2":27},{"diffs":[[0,"40364487);\r\n"],[1,"\t\t\t"],[0,"d = hh(d, a,"]],"start1":2810,"start2":2810,"length1":24,"length2":27},{"diffs":[[0,"21815835);\r\n"],[1,"\t\t\t"],[0,"c = hh(c, d,"]],"start1":2857,"start2":2857,"length1":24,"length2":27},{"diffs":[[0,"30742520);\r\n"],[1,"\t\t\t"],[0,"b = hh(b, c,"]],"start1":2904,"start2":2904,"length1":24,"length2":27},{"diffs":[[0,"51);\r\n\r\n"],[1,"\t\t\t"],[0,"a = ii(a"]],"start1":2956,"start2":2956,"length1":16,"length2":19},{"diffs":[[0,"98630844);\r\n"],[1,"\t\t\t"],[0,"d = ii(d, a,"]],"start1":2997,"start2":2997,"length1":24,"length2":27},{"diffs":[[0,"26891415);\r\n"],[1,"\t\t\t"],[0,"c = ii(c, d,"]],"start1":3044,"start2":3044,"length1":24,"length2":27},{"diffs":[[0,"16354905);\r\n"],[1,"\t\t\t"],[0,"b = ii(b, c,"]],"start1":3092,"start2":3092,"length1":24,"length2":27},{"diffs":[[0,"57434055);\r\n"],[1,"\t\t\t"],[0,"a = ii(a, b,"]],"start1":3137,"start2":3137,"length1":24,"length2":27},{"diffs":[[0,"00485571);\r\n"],[1,"\t\t\t"],[0,"d = ii(d, a,"]],"start1":3184,"start2":3184,"length1":24,"length2":27},{"diffs":[[0,"94986606);\r\n"],[1,"\t\t\t"],[0,"c = ii(c, d,"]],"start1":3231,"start2":3231,"length1":24,"length2":27},{"diffs":[[0,"-1051523);\r\n"],[1,"\t\t\t"],[0,"b = ii(b, c,"]],"start1":3276,"start2":3276,"length1":24,"length2":27},{"diffs":[[0,"54922799);\r\n"],[1,"\t\t\t"],[0,"a = ii(a, b,"]],"start1":3323,"start2":3323,"length1":24,"length2":27},{"diffs":[[0,"73313359);\r\n"],[1,"\t\t\t"],[0,"d = ii(d, a,"]],"start1":3369,"start2":3369,"length1":24,"length2":27},{"diffs":[[0,"30611744);\r\n"],[1,"\t\t\t"],[0,"c = ii(c, d,"]],"start1":3415,"start2":3415,"length1":24,"length2":27},{"diffs":[[0,"60198380);\r\n"],[1,"\t\t\t"],[0,"b = ii(b, c,"]],"start1":3462,"start2":3462,"length1":24,"length2":27},{"diffs":[[0,"1649);\r\n"],[1,"\t\t\t"],[0,"a = ii(a"]],"start1":3514,"start2":3514,"length1":16,"length2":19},{"diffs":[[0,"3070);\r\n"],[1,"\t\t\t"],[0,"d = ii(d"]],"start1":3559,"start2":3559,"length1":16,"length2":19},{"diffs":[[0,"0379);\r\n"],[1,"\t\t\t"],[0,"c = ii(c"]],"start1":3607,"start2":3607,"length1":16,"length2":19},{"diffs":[[0,"7259);\r\n"],[1,"\t\t\t"],[0,"b = ii(b"]],"start1":3653,"start2":3653,"length1":16,"length2":19},{"diffs":[[0,"51);\r\n\r\n"],[1,"\t\t\t"],[0,"x[0] = a"]],"start1":3701,"start2":3701,"length1":16,"length2":19},{"diffs":[[0,"x[0]);\r\n"],[1,"\t\t\t"],[0,"x[1] = a"]],"start1":3728,"start2":3728,"length1":16,"length2":19},{"diffs":[[0,"x[1]);\r\n"],[1,"\t\t\t"],[0,"x[2] = a"]],"start1":3755,"start2":3755,"length1":16,"length2":19},{"diffs":[[0,"x[2]);\r\n"],[1,"\t\t\t"],[0,"x[3] = a"]],"start1":3782,"start2":3782,"length1":16,"length2":19},{"diffs":[[0,"\r\n\r\n"],[-1,"}\r\n\r\nfunction cmn(q, a, b, x, s, t) {\r\na = add32(add32(a, q), add32(x, t));\r\nreturn add32((a << s) | (a >>> (32 - s)), b);\r\n}\r\n\r\nfunction ff(a, b, c, d, x, s, t) {\r\nreturn cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n}\r\n\r\nfunction gg(a, b, c, d, x, s, t) {\r\nreturn cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n}\r\n\r\nfunction hh(a, b, c, d, x, s, t) {\r\nreturn cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\n\r\nfunction ii(a, b, c, d, x, s, t) {\r\nreturn cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n}\r\n\r\n"],[1,"\t\t}\r\n\r\n\r\n\t\t"],[0,"func"]],"start1":3815,"start2":3815,"length1":484,"length2":19},{"diffs":[[0,"1(s) {\r\n"],[1,"\t\t\t"],[0,"txt = ''"]],"start1":3842,"start2":3842,"length1":16,"length2":19},{"diffs":[[0," = '';\r\n"],[1,"\t\t\t"],[0,"var n = "]],"start1":3856,"start2":3856,"length1":16,"length2":19},{"diffs":[[0,"ength,\r\n"],[1,"\t\t\t"],[0,"state = "]],"start1":3878,"start2":3878,"length1":16,"length2":19},{"diffs":[[0,"8], i;\r\n"],[1,"\t\t\t"],[0,"for (i=6"]],"start1":3943,"start2":3943,"length1":16,"length2":19},{"diffs":[[0,"=64; i<="],[-1,"s.length"],[1,"n"],[0,"; i+=64)"]],"start1":3960,"start2":3960,"length1":24,"length2":17},{"diffs":[[0,"; i+=64) {\r\n"],[1,"\t\t\t\t"],[0,"md5cycle(sta"]],"start1":3969,"start2":3969,"length1":24,"length2":28},{"diffs":[[0," i)));\r\n"],[-1,"}\r\n"],[1,"\t\t\t}\r\n\t\t\t"],[0,"s = s.su"]],"start1":4025,"start2":4025,"length1":19,"length2":25},{"diffs":[[0,"i-64);\r\n"],[1,"\t\t\t"],[0,"var tail"]],"start1":4058,"start2":4058,"length1":16,"length2":19},{"diffs":[[0,"0,0,0,0]"],[-1,";\r\n"],[1,", sl=s.length;\r\n\t\t\t"],[0,"for (i=0"]],"start1":4108,"start2":4108,"length1":19,"length2":35},{"diffs":[[0,"i=0; i<s"],[-1,".length"],[1,"l"],[0,"; i++)"],[-1,"\r\n"],[1," \t"],[0,"tail[i>>"]],"start1":4140,"start2":4140,"length1":31,"length2":25},{"diffs":[[0,"<< 3);\r\n"],[1,"\t\t\t"],[0,"tail[i>>"]],"start1":4197,"start2":4197,"length1":16,"length2":19},{"diffs":[[0,"<< 3);\r\n"],[1,"\t\t\t"],[0,"if (i > "]],"start1":4237,"start2":4237,"length1":16,"length2":19},{"diffs":[[0," 55) {\r\n"],[1,"\t\t\t\t"],[0,"md5cycle"]],"start1":4255,"start2":4255,"length1":16,"length2":20},{"diffs":[[0,"tail);\r\n"],[1,"\t\t\t\ti=16;\r\n\t\t\t\twhile (i--) { tail[i] = 0 }\r\n\t//\t\t\t"],[0,"for (i=0"]],"start1":4283,"start2":4283,"length1":16,"length2":66},{"diffs":[[0,"] = 0;\r\n"],[-1,"}\r\n"],[1,"\t\t\t}\r\n\t\t\t"],[0,"tail[14]"]],"start1":4368,"start2":4368,"length1":19,"length2":25},{"diffs":[[0,"= n*8;\r\n"],[1,"\t\t\t"],[0,"md5cycle"]],"start1":4394,"start2":4394,"length1":16,"length2":19},{"diffs":[[0,"te, tail);\r\n"],[1,"\t\t\t"],[0,"return state"]],"start1":4417,"start2":4417,"length1":24,"length2":27},{"diffs":[[0,"state;\r\n"],[1,"\t\t"],[0,"}\r\n\r\n"],[1,"\t\t"],[0,"/* there"]],"start1":4439,"start2":4439,"length1":21,"length2":25},{"diffs":[[0," here,\r\n"],[1,"\t\t"],[0," * unles"]],"start1":4496,"start2":4496,"length1":16,"length2":18},{"diffs":[[0,"e MD-5\r\n"],[1,"\t\t"],[0," * algor"]],"start1":4550,"start2":4550,"length1":16,"length2":18},{"diffs":[[0,"erhaps\r\n"],[1,"\t\t"],[0," * by ad"]],"start1":4601,"start2":4601,"length1":16,"length2":18},{"diffs":[[0,"rs and\r\n"],[1,"\t\t"],[0," * short"]],"start1":4650,"start2":4650,"length1":16,"length2":18},{"diffs":[[0,"erwise\r\n"],[1,"\t\t"],[0," * I sug"]],"start1":4698,"start2":4698,"length1":16,"length2":18},{"diffs":[[0,"racter\r\n"],[1,"\t\t"],[0," * was t"]],"start1":4752,"start2":4752,"length1":16,"length2":18},{"diffs":[[0,"t then\r\n"],[1,"\t\t"],[0," * how w"]],"start1":4804,"start2":4804,"length1":16,"length2":18},{"diffs":[[0,"tched?\r\n"],[1,"\t\t"],[0," * There"]],"start1":4852,"start2":4852,"length1":16,"length2":18},{"diffs":[[0,"ething\r\n"],[1,"\t\t"],[0," * like "]],"start1":4907,"start2":4907,"length1":16,"length2":18},{"diffs":[[0,"ost is\r\n"],[1,"\t\t"],[0," * utter"]],"start1":4961,"start2":4961,"length1":16,"length2":18},{"diffs":[[0,"andard\r\n"],[1,"\t\t"],[0," * itsel"]],"start1":5012,"start2":5012,"length1":16,"length2":18},{"diffs":[[0," start\r\n"],[1,"\t\t"],[0," * provi"]],"start1":5064,"start2":5064,"length1":16,"length2":18},{"diffs":[[0," UTF-8\r\n"],[1,"\t\t"],[0," * 8-bit"]],"start1":5117,"start2":5117,"length1":16,"length2":18},{"diffs":[[0,"rrays.\r\n"],[1,"\t\t"],[0," */\r\n"],[1,"\t\t"],[0,"function"]],"start1":5152,"start2":5152,"length1":21,"length2":25},{"diffs":[[0,"lk(s) { "],[1,"\t\t"],[0,"/* I fig"]],"start1":5182,"start2":5182,"length1":16,"length2":18},{"diffs":[[0,".   */\r\n"],[1,"\t\t\t"],[0,"var md5b"]],"start1":5222,"start2":5222,"length1":16,"length2":19},{"diffs":[[0," [], i; "],[1,"\t"],[0,"/* Andy "]],"start1":5246,"start2":5246,"length1":16,"length2":17},{"diffs":[[0,"ay. */\r\n"],[1,"\t\t\t"],[0,"for (i=0"]],"start1":5285,"start2":5285,"length1":16,"length2":19},{"diffs":[[0,"+=4) {\r\n"],[1,"\t\t\t"],[0,"md5blks["]],"start1":5313,"start2":5313,"length1":16,"length2":19},{"diffs":[[0,"eAt(i)\r\n"],[1,"\t\t\t"],[0,"+ (s.cha"]],"start1":5349,"start2":5349,"length1":16,"length2":19},{"diffs":[[0," << 8)\r\n"],[1,"\t\t\t"],[0,"+ (s.cha"]],"start1":5380,"start2":5380,"length1":16,"length2":19},{"diffs":[[0,"<< 16)\r\n"],[1,"\t\t\t"],[0,"+ (s.cha"]],"start1":5412,"start2":5412,"length1":16,"length2":19},{"diffs":[[0,"< 24);\r\n"],[-1,"}\r\n"],[1,"\t\t\t}\r\n\t\t\t"],[0,"return m"]],"start1":5445,"start2":5445,"length1":19,"length2":25},{"diffs":[[0,"5blks;\r\n"],[1,"\t\t"],[0,"}\r\n\r\n"],[1,"\t\t"],[0,"var hex_"]],"start1":5471,"start2":5471,"length1":21,"length2":25},{"diffs":[[0,"lit('');\r\n\r\n"],[1,"\t\t"],[0,"function rhe"]],"start1":5523,"start2":5523,"length1":24,"length2":26},{"diffs":[[0,"hex(n)\r\n"],[1,"\t\t"],[0,"{\r\n"],[1,"\t\t\t"],[0,"var s=''"]],"start1":5547,"start2":5547,"length1":19,"length2":24},{"diffs":[[0,", j=0;\r\n"],[1,"\t\t\t"],[0,"for(; j<"]],"start1":5571,"start2":5571,"length1":16,"length2":19},{"diffs":[[0,"<4; j++)"],[-1,"\r\n"],[1,"\t"],[0,"s += hex"]],"start1":5589,"start2":5589,"length1":18,"length2":17},{"diffs":[[0," & 0x0F]"],[-1,"\r\n"],[1,"\t"],[0,"+ hex_ch"]],"start1":5629,"start2":5629,"length1":18,"length2":17},{"diffs":[[0,"0x0F];\r\n"],[1,"\t\t\t"],[0,"return s"]],"start1":5665,"start2":5665,"length1":16,"length2":19},{"diffs":[[0,"urn s;\r\n"],[1,"\t\t"],[0,"}\r\n\r\n"],[1,"\t\t"],[0,"function"]],"start1":5679,"start2":5679,"length1":21,"length2":25},{"diffs":[[0,"x(x) {\r\n"],[1,"\t\t\tvar l=x.length;\r\n\t\t\t"],[0,"for (var"]],"start1":5707,"start2":5707,"length1":16,"length2":39},{"diffs":[[0,"; i<"],[-1,"x.length"],[1,"l"],[0,"; i++)"],[-1,"\r\n"],[1,"\t"],[0,"x[i]"]],"start1":5750,"start2":5750,"length1":24,"length2":16},{"diffs":[[0,"hex(x[i]);\r\n"],[1,"\t\t\t"],[0,"return x.joi"]],"start1":5770,"start2":5770,"length1":24,"length2":27},{"diffs":[[0,");\r\n"],[-1,"}\r\n\r\nfunction md5(s) {\r\nreturn hex(md51(s));\r\n"],[1,"\t\t"],[0,"}\r\n\r\n"],[1,"\t\t"],[0,"/* t"]],"start1":5801,"start2":5801,"length1":59,"length2":17},{"diffs":[[0,"aster,\r\n"],[1,"\t\t"],[0,"so if po"]],"start1":5840,"start2":5840,"length1":16,"length2":18},{"diffs":[[0,"me IEs\r\n"],[1,"\t\t"],[0,"are the "]],"start1":5878,"start2":5878,"length1":16,"length2":18},{"diffs":[[0,"f that\r\n"],[1,"\t\t"],[0,"need the"]],"start1":5914,"start2":5914,"length1":16,"length2":18},{"diffs":[[0,"ction,\r\n"],[1,"\t\t"],[0,"generate"]],"start1":5951,"start2":5951,"length1":16,"length2":18},{"diffs":[[0,"  */\r\n\r\n"],[1,"\t\t"],[0,"function"]],"start1":5987,"start2":5987,"length1":16,"length2":18},{"diffs":[[0,", b) {\r\n"],[1,"\t\t\t"],[0,"return ("]],"start1":6013,"start2":6013,"length1":16,"length2":19},{"diffs":[[0,"F;\r\n"],[1,"\t\t"],[0,"}\r\n\r\n"],[1,"\t\t"],[0,"if ("],[-1,"md5('"],[1,"hex(md51(\""],[0,"hello"],[-1,"'"],[1,"\")"],[0,") != "],[-1,"'"],[1,"\""],[0,"5d41"]],"start1":6050,"start2":6050,"length1":34,"length2":44},{"diffs":[[0,"c592"],[-1,"'"],[1,"\""],[0,") {\r\n"],[1,"\t\t\t"],[0,"func"]],"start1":6118,"start2":6118,"length1":14,"length2":17},{"diffs":[[0,", y) {\r\n"],[1,"\t\t\t\t"],[0,"var lsw "]],"start1":6147,"start2":6147,"length1":16,"length2":20},{"diffs":[[0,"FFFF),\r\n"],[1,"\t\t\t\t"],[0,"msw = (x"]],"start1":6191,"start2":6191,"length1":16,"length2":20},{"diffs":[[0,"> 16);\r\n"],[1,"\t\t\t\t"],[0,"return ("]],"start1":6239,"start2":6239,"length1":16,"length2":20},{"diffs":[[0,");\r\n"],[-1,"}\r\n}"],[1,"\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn hex(md51(string));\r\n\t}\t\r\n})();\r\n"]],"start1":6285,"start2":6285,"length1":8,"length2":58}]],"length":6343,"saved":false}
